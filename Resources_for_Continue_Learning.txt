### Resources for Continue Learning

1.  Lessons Software Carpentry
    -   Shell: <https://swcarpentry.github.io/shell-novice/>
    -   Git: <https://swcarpentry.github.io/git-novice/>
    -   Gapminder:
        -   Python:
            <https://swcarpentry.github.io/python-novice-gapminder/>
        -   R: <http://swcarpentry.github.io/r-novice-gapminder>
    -   Other Carpentry Lessons:
        <http://software-carpentry.org/lessons/>
2.  Lessons Data Carpentry (Ecology)
    -   Overview: <http://www.datacarpentry.org/ecology-workshop/>
    -   Spreadsheets:
        <http://datacarpentry.github.io/spreadsheet-ecology-lesson/>
    -   OpenRefine:
        <http://datacarpentry.github.io/OpenRefine-ecology-lesson/>
    -   SQL: <http://datacarpentry.github.io/sql-ecology-lesson/>
    -   Visualization using R:
        <http://datacarpentry.github.io/R-ecology-lesson/>
    -   Other Carpentry Lessons:
        [http://www.datacarpentry.org/lessons/](http://datacarpentry.github.io/R-ecology-lesson/)
3.  SC Reference (Includes Summaries of Basic Commands):
    -   shell: <https://swcarpentry.github.io/shell-novice/reference/>
    -   git: <https://swcarpentry.github.io/git-novice/reference/>
    -   Gapmider
        -   python:
            <https://swcarpentry.github.io/python-novice-gapminder/reference/>
        -   R:
            <http://swcarpentry.github.io/r-novice-gapminder/reference/>
4.  DC Reference:
    -   Spreadsheets:
        <http://www.datacarpentry.org/spreadsheet-ecology-lesson/reference/>
    -   OpenRefine:
        <http://www.datacarpentry.org/OpenRefine-ecology-lesson/reference/>
    -   SQL:
        <http://www.datacarpentry.org/sql-ecology-lesson/reference/>
    -   Visualization using R:
        <http://www.datacarpentry.org/sql-ecology-lesson/reference/>
5.  Additional Resources
    -   Shell:
        -   Cool website that can dissect your shell commands (super
            useful for troubleshooting): <http://explainshell.com/>
    -   Python:
        -   Python documentation: <https://www.python.org/doc/>
        -   List of python tutorials:
            <https://www.fullstackpython.com/best-python-resources.html>
        -   Python floating point Issues and Limitations:
            <https://docs.python.org/3/tutorial/floatingpoint.html>
6.  Python and R
    -   Code Academy: <https://www.codecademy.com/>
    -   Code: <http://code.org>
    -   Lynda: <http://lynda.ou.edu>
    -   Udacity: <https://udacity.com>
7.  Git/GitHub
    -   Guide to Markdown on Github:
        <https://guides.github.com/features/mastering-markdown/>
    -   Intro to Github workflow:
        <https://guides.github.com/introduction/flow/>
    -   Forking projects on Github:
        <https://guides.github.com/activities/forking/>
        -   perks: Students are eligible for a free Github education
            account (unlimited private repositories)
            <https://education.github.com>
8.  Plotting
    -   What chart do I use?
        -   <http://extremepresentation.typepad.com/blog/2006/09/choosing_a_good.html>
    -   What slide do I use?
        -   <http://extremepresentation.typepad.com/blog/2015/01/announcing-the-slide-chooser.html>
    -   Pandas visualization examples:
        -   <http://pandas.pydata.org/pandas-docs/version/0.18.1/visualization.html>\
    -   Matplotlib visualization examples:
        -   <http://matplotlib.org/gallery.html>
9.  Library(package) documentation:
    -   matplotlib: <http://matplotlib.org/>
    -   pandas: <http://pandas.pydata.org/>
    -   ggplot2: <http://ggplot2.org/>
    -   tidyverse: <https://www.tidyverse.org/>
10. Cheatsheets
    -   Pandas:
        <https://github.com/pandas-dev/pandas/raw/master/doc/cheatsheet/Pandas_Cheat_Sheet.pdf>
    -   ggplot2:
        <http://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf>
    -   dplyr:
        <https://github.com/rstudio/cheatsheets/raw/master/data-transformation.pdf>
    -   tidyr:
        <https://github.com/rstudio/cheatsheets/raw/master/data-import.pdf>
11. Other
    -   A comparison of several text editors for coding:
        -   <https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Available_text_editors>
    -   What programming language is right for you:
        -   <http://www.bestprogramminglanguagefor.me/>
12. Lite Reading
    -   What is Code?
        <https://www.bloomberg.com/graphics/2015-paul-ford-what-is-code/>
