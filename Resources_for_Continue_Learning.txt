### Resources for Continue Learning

1.  Lessons:
    -   Shell: https://swcarpentry.github.io/shell-novice/
    -   Git: https://swcarpentry.github.io/git-novice/
    -   Gapminder:
        -   Python:
            https://swcarpentry.github.io/python-novice-gapminder/
        -   R: http://swcarpentry.github.io/r-novice-gapminder
    -   Ecology:
        -   R: http://datacarpentry.github.io/R-ecology-lesson/
    -   Other Carpentry Lessons: http://software-carpentry.org/lessons/
2.  SWC Reference (Includes Summaries of Basic Commands):
    -   shell: https://swcarpentry.github.io/shell-novice/reference/
    -   git: https://swcarpentry.github.io/git-novice/reference/
    -   Gapmider
        -   python:
            https://swcarpentry.github.io/python-novice-gapminder/reference/
        -   R:
            http://swcarpentry.github.io/r-novice-gapminder/reference/
3.  Additional Resources
    -   Shell:
        -   Cool website that can dissect your shell commands (super
            useful for troubleshooting): http://explainshell.com/
    -   Python:
        -   Python documentation: https://www.python.org/doc/
        -   List of python tutorials:
            https://www.fullstackpython.com/best-python-resources.html
        -   Python floating point Issues and Limitations:
            https://docs.python.org/3/tutorial/floatingpoint.html
4.  Python and R:
    -   Code Academy: https://www.codecademy.com/
    -   Code: http://code.org
    -   Lynda: http://lynda.ou.edu
    -   Udacity https://udacity.com
5.  Git/GitHub:
    -   Guide to Markdown on Github:
        https://guides.github.com/features/mastering-markdown/
    -   Intro to Github work flow:
        https://guides.github.com/introduction/flow/
    -   Forking projects on Github:
        https://guides.github.com/activities/forking/
        -   perks: Students are eligible for a free Github education
            account (unlimited private repositories)
            https://education.github.com
6.  Plotting:
    -   What chart do I use?
        -   http://extremepresentation.typepad.com/blog/2006/09/choosing\_a\_good.html
    -   Pandas visualization examples:
        -   http://pandas.pydata.org/pandas-docs/version/0.18.1/visualization.html
    -   Matplotlib visualization examples:
        -   http://matplotlib.org/gallery.html
7.  Library(package) documentation:
    -   matplotlib: http://matplotlib.org/
    -   pandas: http://pandas.pydata.org/
8.  Cheatsheets:
    -   Pandas:
        https://github.com/pandas-dev/pandas/raw/master/doc/cheatsheet/Pandas\_Cheat\_Sheet.pdf
    -   ggplot2:
        http://www.rstudio.com/wp-content/uploads/2015/03/ggplot2-cheatsheet.pdf
9.  Other:
    -   A comparison of several text editors for coding:
        https://developer.mozilla.org/en-US/docs/Learn/Common\_questions/Available\_text\_editors
    -   What programming language is right for you:
        http://www.bestprogramminglanguagefor.me/
10. Lite Reading:
    -   https://www.bloomberg.com/graphics/2015-paul-ford-what-is-code/
